{
  "hash": "97b8dc64ee29028ec22b956e4d51be9b",
  "result": {
    "markdown": "---\ntitle: \"Hranice dvou období pro porovnání\"\ndescription: |\n  A short description of the post.\nauthor:\n  - name: Marek Prokop\n    affiliation: \"[PROKOP software s.r.o.](https://www.prokopsw.cz/cs)\"\ndate: 2022-05-01\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\noptions(lubridate.week.start = 1)\n```\n:::\n\n\nFunkce\n\n\n\n\n\n## Operace s intervalem v lubridate\n\n### Vytvoření intervalu\n\n#### Mám datum od a do\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninterval(\n  start = ymd(\"2022-01-01\"),\n  end = ymd(\"2022-03-15\")\n)\n\n# nebo\n\ninterval(\"2022-01-01/2022-03-15\")\n\n# nebo\n\n\"2022-01-01\" %--% \"2022-03-15\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-01 UTC--2022-03-15 UTC\n[1] 2022-01-01 UTC--2022-03-15 UTC\n[1] 2022-01-01 UTC--2022-03-15 UTC\n```\n:::\n:::\n\n\n#### Mám počet dní a datum od\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.interval(days(73), start = ymd(\"2022-01-01\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-01 UTC--2022-03-15 UTC\n```\n:::\n:::\n\n\n#### Mám počet dní a datum do\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.interval(-days(73), start = ymd(\"2022-03-15\")) |> \n  int_flip()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-01 UTC--2022-03-15 UTC\n```\n:::\n:::\n\n\n#### Mám počet týdnů a datum od\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.interval(weeks(10), start = ymd(\"2022-01-01\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-01 UTC--2022-03-12 UTC\n```\n:::\n:::\n\n\n### Informace o intervalu\n\n#### Počáteční datum\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  int_start()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2022-01-01 UTC\"\n```\n:::\n:::\n\n\n#### Koncové datum\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  int_end()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2022-03-15 UTC\"\n```\n:::\n:::\n\n\n#### Počet dní intervalu\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" / days()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 73\n```\n:::\n:::\n\n\n#### Počet celých týdnů intervalu\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" %/% weeks()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n:::\n\n\n#### Zbytek po odečtení všech celých týdnů\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" %% weeks() |> \n  as.period()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"3d 0H 0M 0S\"\n```\n:::\n:::\n\n\n\n### Operace s intervalem\n\n#### Posun intervalu o počet dní dopředu\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  int_shift(by = days(15))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-16 UTC--2022-03-30 UTC\n```\n:::\n:::\n\n\n#### Posun intervalu o počet týdnů dozadu\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  int_shift(by = weeks(-2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2021-12-18 UTC--2022-03-01 UTC\n```\n:::\n:::\n\n\n#### Posun intervalu na jiné počáteční datum\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  as.duration() |> \n  as.interval(start = ymd(\"2022-01-10\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-10 UTC--2022-03-24 UTC\n```\n:::\n:::\n\n\n#### Posun intervalu na jiné koncové datum\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  int_flip() |> \n  as.duration() |> \n  as.interval(start = ymd(\"2022-01-10\")) |> \n  int_flip()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2021-10-29 UTC--2022-01-10 UTC\n```\n:::\n:::\n\n\n#### Zarovnání intervalu na dny v týdnu\n\nPosunu interval dozadu tak, aby začínal pondělím.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  (\\(x) {\n    as.duration(x) |> \n      as.interval(start = floor_date(int_start(x), \"week\"))\n  })()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2021-12-27 UTC--2022-03-10 UTC\n```\n:::\n:::\n\n\nPosunu interval dopředu tak, aby začínal pondělím.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  (\\(x) {\n    as.duration(x) |> \n      as.interval(start = ceiling_date(int_start(x), \"week\"))\n  })()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-03 UTC--2022-03-17 UTC\n```\n:::\n:::\n\n\nPosunu interval dopředu tak, aby začínal středou.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  (\\(x) {\n    as.duration(x) |> \n      as.interval(start = ceiling_date(int_start(x), \"week\") + days(2))\n  })()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-05 UTC--2022-03-19 UTC\n```\n:::\n:::\n\n\nPosunu interval dopředu tak, aby končil nedělí.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  (\\(x) {\n    int_flip(x) |> \n      as.duration() |> \n      as.interval(start = ceiling_date(int_end(x), \"week\") - days(1)) |> \n      int_flip()\n  })()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-06 UTC--2022-03-20 UTC\n```\n:::\n:::\n\n\nPosunu interval dozadu tak, aby končil nedělí.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |> \n  (\\(x) {\n    int_flip(x) |> \n      as.duration() |> \n      as.interval(start = floor_date(int_end(x), \"week\") - days(1)) |> \n      int_flip()\n  })()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2021-12-30 UTC--2022-03-13 UTC\n```\n:::\n:::\n\n\nZkrátím interval tak, aby zahrnoval jen celé kalendářní týdny.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"2022-01-01\" %--% \"2022-03-15\" |>\n  (\\(x) {\n    int_start(x) <- ceiling_date(int_start(x), \"week\")\n    int_end(x) <- floor_date(int_end(x), \"week\") - days(1)\n    x\n  })()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2022-01-03 UTC--2022-03-13 UTC\n```\n:::\n:::\n\n\n\n## Mám pevně dané období od--do\n\nMám pevně dané období od--do, které se nesmí změnit. Vypadá například takhle:\n\n\n::: {.cell fig.asp='0.25'}\n\n```{.r .cell-code}\ndate_from <- ymd(\"2022-01-17\")\ndate_to <- ymd(\"2022-02-05\")\nbase_interval <- interval(date_from, date_to)\n\nplot_timeline(`základní období` = base_interval)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nK němu teď budu hledat předcházející období podle různých zadání. Jediná neměnná podmínka je, že předcházející období musí mít stejnou délku (stejný počet dní).\n\n### Těsně předcházející období\n\nHledám období těsně předcházející o stejné délce. Nic jiného mě nezajímá\n \n\n::: {.cell fig.asp='0.25'}\n\n```{.r .cell-code}\nprevious_interval <- int_shift(\n  base_interval, -as.period(base_interval, unit = \"day\") - days(1)\n)\n\nplot_timeline(\n  `základní období` = base_interval,\n  `předchozí období` = previous_interval\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n \n### Těsně předcházející, stejné dny v týdnu\n\nHledám období o stejné délce, co nejtěsněji předcházející, ale začínající (a tedy i končící) stejným dnem v týdnu.\n \n\n::: {.cell fig.asp='0.25'}\n\n```{.r .cell-code}\nprevious_date_from <- date_from - ceiling((date_to - date_from + 1) / 7) * 7\nprevious_date_to <- previous_date_from + (date_to - date_from)\n\nprevious_interval <- int_shift(\n  base_interval, -days(ceiling((base_interval %/% days(1) + 1) / 7) * 7)\n)\n\nplot_timeline(\n  `základní období` = base_interval,\n  `předchozí období` = previous_interval\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n \n### Přesně před rokem\n\nHledám přesně odpovídající období před rokem. Mělo by to řešit i přestupné roky.\n\n\n::: {.cell fig.asp='0.25'}\n\n```{.r .cell-code}\nprevious_date_from <- date_from - years(1)\nprevious_date_to <- previous_date_from + (date_to - date_from)\n\nplot_timeline(\n  `základní období` = interval(date_from, date_to),\n  `předchozí období` = interval(previous_date_from, previous_date_to),\n  expx = expansion(add = 90)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nPro jistotu ještě test s přestupným rokem. Předchozí období začíná ve stejný měsíc a den, ale konec je o den posunutý, aby byla obě období stejně dlouhá.\n\n\n::: {.cell fig.asp='0.25'}\n\n```{.r .cell-code}\nleap_year_date_from <- ymd(\"2021-02-17\")\nleap_year_date_to <- ymd(\"2021-03-05\")\nprevious_date_from <- leap_year_date_from - years(1)\nprevious_date_to <- previous_date_from + (leap_year_date_to - leap_year_date_from)\n\nplot_timeline(\n  `základní období` = interval(leap_year_date_from, leap_year_date_to),\n  `předchozí období` = interval(previous_date_from, previous_date_to),\n  expx = expansion(add = 90)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n### Před rokem, stejné dny v týdnu\n\nHledám odpovídající období před rokem, které začíná a končí stejnými dny v týdnu.\n\n\n::: {.cell fig.asp='0.25'}\n\n```{.r .cell-code}\nprevious_date_from <- date_from - years(1) + wday(date_from) - wday(date_from - years(1))\nprevious_date_to <- previous_date_from + (date_to - date_from)\n\nplot_timeline(\n  `základní období` = interval(date_from, date_to),\n  `předchozí období` = interval(previous_date_from, previous_date_to),\n  expx = expansion(add = 100)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n## Mám časový rozsah a datum změny\n\nMám k dispozici data v rozsahu od `min_date` po `max_date` a dále znám datum určité změny `break_date`. Budu hledat období před a po změně splňující různé varianty zadání.\n\n\n::: {.cell fig.asp='0.25'}\n\n```{.r .cell-code}\nmax_date <- ymd(\"2022-04-12\")\nmin_date <- max_date - months(15)\nbreak_date <- ymd(\"2021-09-19\")\n\nplot_timeline(\n  rozsah = interval(min_date, max_date),\n  min_max = c(min_date, max_date),\n  break_date = break_date,\n  expx = expansion(add = 10)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n### Navazující období začínající stejným dnem v týdnu\n\n\n::: {.cell}\n\n:::\n\n\n\n### Navazující období se stejným počtem celých týdnů\n\nHledám dvě co nejdelší a zároveň stejně dlouhá období tvořená celými kalendářními týdny (od pondělí do neděle), které se vejdou jak do intervalu `break_date`--`max_date`, tak do intervalu `min_date`--`break_date - 1`, a zároveň co nejtěsněji následují za sebou.\n\n\n::: {.cell fig.asp='0.25'}\n\n```{.r .cell-code}\ndate_from <- ceiling_date(break_date, \"week\")\ndate_to <- floor_date(max_date, \"week\") - 1\n\nprevious_date_from <- date_from - ceiling((date_to - date_from + 1) / 7) * 7\nprevious_date_to <- previous_date_from + (date_to - date_from)\n\nplot_timeline(\n  `základní období` = interval(date_from, date_to),\n  `předchozí období` = interval(previous_date_from, previous_date_to),\n  min_max = c(min_date, max_date),\n  break_date = break_date,\n  expx = expansion(add = c(5, 5))\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n## Funkce\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_timeline <- function(..., min_max = NULL, break_date = NULL, expx = expansion(add = 1)) {\n  params <- list(...)\n  df <- tibble(\n    period = as_factor(names(params)),\n    date_from = map(params, ~ as_date(int_start(.x))) |> simplify() |> as_date(),\n    date_to = map(params, ~ as_date(int_end(.x))) |> simplify() |> as_date()\n  )\n  scale_x_breaks <- c(df$date_from, df$date_to)\n  if (!is.null(min_max)) {\n    scale_x_breaks <- c(scale_x_breaks, min_max)\n  }\n  if (!is.null(break_date)) {\n    scale_x_breaks <- c(scale_x_breaks, break_date)\n  }\n  \n  ggplot(df) +\n  geom_segment(\n    aes(x = date_from, xend = date_to, y = 0.3, yend = 0.3, color = period), \n    size = 4\n  ) +\n  geom_text(\n    aes(\n      x = date_from + (date_to - date_from) / 2, \n      y = 0.7, \n      label = paste0(\n        period, \", \", date_to - date_from + 1, \" dní\\n\",\n        wday(date_from, label = TRUE, abbr = FALSE), \" \", \n        format(date_from, \"%x\"),\n        \" až \", \n        wday(date_to, label = TRUE, abbr = FALSE), \" \",\n        format(date_to, \"%x\")\n      ), \n      hjust = 0.5\n    )\n  ) +\n  scale_colour_brewer(palette = \"Pastel1\") +\n  scale_x_date(\n    breaks = scale_x_breaks,\n    labels = scale_x_breaks,\n    limits = c(min(scale_x_breaks), max(scale_x_breaks)),\n    guide = guide_axis(check.overlap = TRUE),\n    expand = expx\n  ) +\n  scale_y_continuous(limits = c(0, 1)) +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(angle = 90, vjust = 0.5, size = 8),\n    axis.ticks.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = \"none\"\n  )\n}\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}